<!DOCTYPE html>
<html>
  <head>
    <title>Mapbox Static Map Example</title>
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<!-- Other head elements -->
	<script>
		var userAgent = navigator.userAgent.toLowerCase();
		var isAndroid = userAgent.indexOf("android") > -1;
		var isIphone = userAgent.indexOf("iphone") > -1 || userAgent.indexOf("ipad") > -1;
		if (isAndroid) {
			document.querySelector('meta[name="viewport"]').setAttribute('content', 'width=device-width, initial-scale=1.2, maximum-scale=1, user-scalable=no');
		} else if (isIphone) {
			document.querySelector('meta[name="viewport"]').setAttribute('content', 'width=device-width, initial-scale=1.1, maximum-scale=1.2, user-scalable=no');
		}
	</script>
  </head>
  <body>
    <div id="map"></div>
    <script>
      setTimeout(function() {
			location.reload();
		}, 10000);
	  // Replace YOUR_ACCESS_TOKEN with your Mapbox access token
      const accessToken = 'pk.eyJ1IjoibW9vb2IiLCJhIjoiY2xmNjhmNmU3MWptYzNxbGhqdnNrc3hmYSJ9.y6fr5WQfMHummOjH2y2fHg';
      
      // Replace JSON_WEB_LINK with the link to your JSON data
      fetch('https://arrivelah2.busrouter.sg/?id=97039')
        .then(response => response.json())
        .then(data => {
          // Extract the latitude and longitude values from the JSON
          
		var bus2 = data.services[0]; // assuming the first service is bus 2
		var nextBus = new Date(bus2.next.time);
		//var subsequentBus = new Date(bus2.subsequent.time);
		var next2Bus = new Date(bus2.next2.time);
		var next3Bus = new Date(bus2.next3.time);
		var timeDiffNextBus = getTimeDiff(new Date(), nextBus);
		//var timeDiffSubsequentBus = getTimeDiff(new Date(), subsequentBus);
		var timeDiffNext2Bus = getTimeDiff(new Date(), next2Bus);
		var timeDiffNext3Bus = getTimeDiff(new Date(), next3Bus);
		document.getElementById("next-bus-time").innerHTML = timeDiffNextBus;
		//document.getElementById("subsequent-bus-time").innerHTML = timeDiffSubsequentBus;
		document.getElementById("next2-bus-time").innerHTML = timeDiffNext2Bus;
		document.getElementById("next3-bus-time").innerHTML = timeDiffNext3Bus;
			  
		  const lat = bus2.next.lat;
          const lng = bus2.next.lng;
          //const lat2 = data.services[1].next2.lat;
         // const lng2 = data.services[1].next2.lng;
          
          // Construct the Mapbox static map URL with the latitude and longitude values
          const mapUrl = `https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/pin-s+000000(103.96894062959022,1.35535317187612),pin-s-${data.services[0].no}+ff0000(${lng},${lat})/103.9689,1.3586,13.49,0/300x250?access_token=${accessToken}`;
          const mapUrl2 = `https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/pin-s+000000(103.96894062959022,1.35535317187612),pin-s-${data.services[0].no}+ff0000(${lng},${lat})/${lng},${lat},14.99,0/300x250?access_token=${accessToken}`;
		  //window.alert(data.services[0].no);
		  //window.alert(data.services[1].no);
		  //window.alert(mapUrl);
          // Create an image element with the Mapbox static map URL as the source
          const mapImg = document.createElement('img');
          mapImg.src = mapUrl;
          
		  const mapImg2 = document.createElement('img');
          mapImg2.src = mapUrl2;
		  
          // Add the image element to the HTML document
		const mapContainer = document.getElementById('map');
		mapContainer.appendChild(mapImg);
		//const lineBreak = document.createElement('br');
		//mapContainer.appendChild(lineBreak);
		//const mapContainer2 = document.getElementById('map');
		//mapContainer2.appendChild(mapImg2);
		  
        })
        .catch(error => console.error(error));
		
		function getTimeDiff(date1, date2) {
			var diffInMs = date2 - date1;
			
			if(diffInMs <0)
				diffInMs = 0;
			
			// convert time difference to hours, minutes, and seconds
			const hours = Math.floor(diffInMs / (1000 * 60 * 60));
			const minutes = Math.floor((diffInMs % (1000 * 60 * 60)) / (1000 * 60));
			const seconds = Math.floor((diffInMs % (1000 * 60)) / 1000);
			//const timeDiffStr = `${hours}h ${minutes}m ${seconds}s`;
			const timeDiffStr = `${minutes} min(s) ${seconds} sec(s)`;
			//const timeDiffStr = `${minutes} min(s)`;			
			return timeDiffStr;
			//return diffInMin + " min";
		}
    </script>

	<h1>Bus Timings</h1>
	<h2>Bus 2</h2>
	<ul>
		<li>Next bus:&nbsp;&nbsp;&nbsp;&nbsp;<span id="next-bus-time"></span></li>
		<!--<li>Subsequent bus: <span id="subsequent-bus-time"></span></li> -->
		<li>Next 2 bus:&nbsp;<span id="next2-bus-time"></span></li>
		<li>Next 3 bus:&nbsp;<span id="next3-bus-time"></span></li>
	</ul>
</body>
</html>
